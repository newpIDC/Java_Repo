<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
	<beans:description>
		Showcases reading and writing of headers and footers. Copies header from input to output and adds a footer.
	</beans:description>

	<job id="headerFooterSample">
		<step id="step1">
			<tasklet>
				<chunk reader="reader" writer="writer" commit-interval="3">
					<streams>
						<stream ref="reader"/>
						<stream ref="writer"/>
					</streams>
				</chunk>
				<listeners>
					<listener ref="footerCallback"/>
				</listeners>
			</tasklet>
		</step>
	</job>

	<beans:bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource" ref="inputResource" />
		<beans:property name="lineMapper">
			<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<beans:property name="delimiter" value="," />
					</beans:bean>
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
		<beans:property name="skippedLinesCallback" ref="headerCopier" />
		<beans:property name="linesToSkip" value="1" />
	</beans:bean>
	<beans:bean id="writer" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<beans:property name="resource" ref="outputResource" />
		<beans:property name="lineAggregator">
			<beans:bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</beans:property>
		<beans:property name="headerCallback" ref="headerCopier" />
		<beans:property name="footerCallback" ref="footerCallback" />
	</beans:bean>
	<beans:bean id="footerCallback" class="org.springframework.batch.sample.support.SummaryFooterCallback" />
	<beans:bean id="headerCopier"
		class="org.springframework.batch.sample.support.HeaderCopyCallback" />
	<beans:bean id="inputResource" class="org.springframework.core.io.ClassPathResource">
		<beans:constructor-arg type="java.lang.String"
			value="data/headerFooterSample/input.txt" />
	</beans:bean>
	<beans:bean id="outputResource" class="org.springframework.core.io.FileSystemResource">
		<beans:constructor-arg type="java.lang.String"
			value="target/test-outputs/headerFooterOutput.txt" />
	</beans:bean>
</beans:beans>