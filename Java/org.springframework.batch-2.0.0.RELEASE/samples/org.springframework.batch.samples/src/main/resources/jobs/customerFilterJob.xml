<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd">

	<job id="customerFilterJob">
		<step id="uploadCustomer">
			<tasklet>
				<chunk reader="customerFileUploadReader" 
						processor="customerUpdateProcessor" 
						writer="customerUpdateWriter" 
						commit-interval="1"/>
				<listeners>
					<listener ref="customerTokenizer"/>
				</listeners>
		    </tasklet>
		</step>
	</job>
		
	<beans:bean id="customerUpdateWriter" class="org.springframework.batch.sample.domain.trade.CustomerUpdateWriter" >
		<beans:property name="customerDao" ref="customerDao" />
	</beans:bean>

	<beans:bean name="customerFileUploadReader" class="org.springframework.batch.item.file.FlatFileItemReader" >
		<beans:property name="resource" ref="customerFileResource" />
		<beans:property name="lineMapper">
		 	<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper" >
		 		<beans:property name="lineTokenizer" ref="customerTokenizer" />
		 		<beans:property name="fieldSetMapper" ref="customerMapper" />
		 	</beans:bean>
		</beans:property>
		<!-- skip the header -->
		<beans:property name="linesToSkip" value="1" />
	</beans:bean>
	
	<beans:bean name="customerMapper" class="org.springframework.batch.sample.domain.trade.CustomerUpdateFieldSetMapper" />
	
	<beans:bean name="customerTokenizer" class="org.springframework.batch.sample.domain.trade.CompositeCustomerUpdateLineTokenizer" >
		<beans:property name="customerTokenizer">
			<beans:bean class="org.springframework.batch.item.file.transform.FixedLengthTokenizer" >
				<beans:property name="columns" value="1,2-18,19-26" />
			</beans:bean>
		</beans:property>
		<beans:property name="footerTokenizer" >
			<beans:bean class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
				<beans:property name="columns" value="1,2-8" />
			</beans:bean>
		</beans:property>
	</beans:bean>
	
	<beans:bean name="customerUpdateProcessor" class="org.springframework.batch.sample.domain.trade.CustomerUpdateProcessor" >
		<beans:property name="customerDao" ref="customerDao" />
		<beans:property name="invalidCustomerLogger" >
			<beans:bean class="org.springframework.batch.sample.domain.trade.internal.CommonsLoggingInvalidCustomerLogger" />
		</beans:property>
	</beans:bean>
	
	<beans:bean name="customerDao" class="org.springframework.batch.sample.domain.trade.internal.JdbcCustomerDao" >
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean name="customerFileResource" class="org.springframework.core.io.ClassPathResource" > 
		<beans:constructor-arg value="data/customerFilterJob/input/customers.txt" />
	</beans:bean>
</beans:beans>
