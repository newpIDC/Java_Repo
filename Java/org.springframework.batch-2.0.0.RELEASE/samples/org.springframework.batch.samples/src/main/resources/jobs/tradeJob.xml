<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       		http://www.springframework.org/schema/batch
       		http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
       		http://www.springframework.org/schema/aop
 			http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<job id="tradeJob">
		<step id="step1" next="step2">
			<tasklet>
				<chunk reader="fileItemReader" processor="validatingProcessor" writer="tradeWriter" 
		               commit-interval="1">
					<streams>
						<stream ref="fileItemReader" />
					</streams>
				</chunk>
				<transaction-attributes isolation="READ_COMMITTED" />
			</tasklet>
		</step>
		<step id="step2" next="step3">
			<tasklet>
				<chunk reader="tradeSqlItemReader" writer="customerWriter" commit-interval="1" />
			</tasklet>
		</step>
		<step id="step3">
			<tasklet>
				<chunk reader="customerSqlItemReader" writer="creditWriter" commit-interval="1" />
			</tasklet>
		</step>
	</job>

	<beans:bean id="validatingProcessor" class="org.springframework.batch.item.validator.ValidatingItemProcessor">
		<beans:constructor-arg ref="tradeValidator" />
	</beans:bean>

	<beans:bean id="tradeWriter" class="org.springframework.batch.sample.domain.trade.internal.TradeWriter">
		<beans:property name="dao" ref="tradeDao" />
	</beans:bean>

	<beans:bean id="customerWriter" class="org.springframework.batch.sample.domain.trade.internal.CustomerUpdateWriter">
		<beans:property name="dao" ref="customerDao" />
	</beans:bean>

	<beans:bean id="creditWriter" class="org.springframework.batch.sample.domain.trade.internal.CustomerCreditUpdateWriter">
		<beans:property name="dao" ref="customerReportItemWriter" />
	</beans:bean>

	<beans:bean id="tradeSqlItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="sql" value="SELECT id, quantity, price, customer from TRADE" />
		<beans:property name="rowMapper">
			<beans:bean class="org.springframework.batch.sample.domain.trade.internal.TradeRowMapper" />
		</beans:property>
	</beans:bean>

	<beans:bean id="customerSqlItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="sql" value="SELECT id, name, credit FROM customer " />
		<beans:property name="rowMapper">
			<beans:bean class="org.springframework.batch.sample.domain.trade.internal.CustomerCreditRowMapper" />
		</beans:property>
	</beans:bean>

	<beans:bean id="tradeDao" class="org.springframework.batch.sample.domain.trade.internal.JdbcTradeDao"
		p:dataSource-ref="dataSource">
		<beans:property name="incrementer">
			<beans:bean parent="incrementerParent">
				<beans:property name="incrementerName" value="TRADE_SEQ" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="customerDao" class="org.springframework.batch.sample.domain.trade.internal.JdbcCustomerDebitDao"
		p:dataSource-ref="dataSource" />

	<beans:bean id="customerReportItemWriter" class="org.springframework.batch.sample.domain.trade.internal.FlatFileCustomerCreditDao">
		<beans:property name="itemWriter">
			<beans:bean class="org.springframework.batch.item.file.FlatFileItemWriter">
				<beans:property name="resource" value="target/test-outputs/20070122.testStream.CustomerReportStep.TEMP.txt" />
				<beans:property name="lineAggregator">
					<beans:bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="fileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource" value="classpath:data/tradeJob/input/20070122.teststream.ImportTradeDataStep.txt" />
		<beans:property name="lineMapper">
			<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<beans:property name="names" value="ISIN, Quantity, Price, Customer" />
					</beans:bean>
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean class="org.springframework.batch.sample.domain.trade.internal.TradeFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="tradeValidator" class="org.springframework.batch.item.validator.SpringValidator">
		<beans:property name="validator">
			<beans:bean class="org.springmodules.validation.valang.ValangValidator">
				<beans:property name="valang">
					<beans:value>
						<![CDATA[{ isin : length(?) < 13 : 'ISIN too long' : 'isin_length' : 12}]]>
					</beans:value>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

</beans:beans>