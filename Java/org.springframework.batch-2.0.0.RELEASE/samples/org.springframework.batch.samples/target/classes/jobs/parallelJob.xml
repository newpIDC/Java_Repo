<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch" 
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<job id="parallelJob">
		<step id="staging" next="loading">
			<tasklet>
				<chunk reader="fileItemReader" 
				       processor="validatingProcessor" 
				       writer="stagingItemWriter" 
				       commit-interval="2"/>
			</tasklet>
		</step>
		<step id="loading">
			<tasklet>
				<chunk reader="stagingReader" 
			           processor="stagingProcessor" 
			           writer="tradeWriter" 
			           commit-interval="1" 
			           task-executor="taskExecutor"/>
			</tasklet>
		</step>
	</job>

	<!-- INFRASTRUCTURE SETUP -->

	<beans:bean id="validatingProcessor" class="org.springframework.batch.item.validator.ValidatingItemProcessor">
		<beans:constructor-arg ref="fixedValidator" />
	</beans:bean>

	<beans:bean id="stagingItemWriter" class="org.springframework.batch.sample.common.StagingItemWriter">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="incrementer">
			<beans:bean parent="incrementerParent">
				<beans:property name="incrementerName" value="BATCH_STAGING_SEQ" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

	<beans:bean id="stagingReader" class="org.springframework.batch.sample.common.StagingItemReader">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="stagingProcessor" class="org.springframework.batch.sample.common.StagingItemProcessor">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="tradeWriter" class="org.springframework.batch.sample.domain.trade.internal.TradeWriter">
		<beans:property name="dao" ref="tradeDao" />
	</beans:bean>

	<!--
		This input source is injected into the test case to verify the output
		- not used by the job at all
	-->
	<beans:bean id="testItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource"
			value="classpath:data/fixedLengthImportJob/input/20070122.teststream.ImportTradeDataStep.txt" />
		<beans:property name="lineMapper">
			<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer" ref="fixedFileTokenizer" />
				<beans:property name="fieldSetMapper" ref="fieldSetMapper" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="fileItemReader" parent="testItemReader"
		autowire-candidate="false">
	</beans:bean>

	<beans:bean id="fixedFileTokenizer"
		class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
		<beans:property name="names" value="ISIN, Quantity, Price, Customer" />
		<beans:property name="columns" value="1-12, 13-15, 16-20, 21-29" />
	</beans:bean>

	<beans:bean id="fixedValidator"
		class="org.springframework.batch.item.validator.SpringValidator">
		<beans:property name="validator">
			<beans:bean id="tradeValidator" class="org.springmodules.validation.valang.ValangValidator">
				<beans:property name="valang">
					<beans:value>
						<![CDATA[
						{ isin : length(?) < 13 : 'ISIN too long' : 'isin_length' : 12}
					]]>
					</beans:value>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="tradeDao"
		class="org.springframework.batch.sample.domain.trade.internal.JdbcTradeDao">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="incrementer">
			<beans:bean parent="incrementerParent">
				<beans:property name="incrementerName" value="TRADE_SEQ" />
			</beans:bean>

		</beans:property>
	</beans:bean>

	<beans:bean id="fieldSetMapper"
		class="org.springframework.batch.sample.domain.trade.internal.TradeFieldSetMapper" />

	<aop:config>
		<aop:aspect id="moduleLogging" ref="logAdvice">
			<aop:after
				pointcut="execution( * org.springframework.batch.item.ItemWriter+.write(Object)) and args(item)"
				method="doStronglyTypedLogging" />
		</aop:aspect>
	</aop:config>

</beans:beans>