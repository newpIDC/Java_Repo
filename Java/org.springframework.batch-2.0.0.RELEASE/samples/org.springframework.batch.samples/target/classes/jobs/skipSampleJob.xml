<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch" 
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       		http://www.springframework.org/schema/batch
       		http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
       		http://www.springframework.org/schema/aop
 			http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<job id="skipJob" incrementer="incrementer">
		<step id="step1" parent="baseStep">
			<tasklet>
				<chunk reader="fileItemReader" processor="tradeProcessor" writer="tradeWriter" 
		               commit-interval="3" skip-limit="10">
					<skippable-exception-classes>
						org.springframework.batch.item.file.FlatFileParseException
						org.springframework.batch.item.WriteFailedException
					</skippable-exception-classes>
				</chunk>
			</tasklet>

			<next on="*" to="step2" />
			<next on="COMPLETED WITH SKIPS" to="errorPrint1" />
			<fail on="FAILED" exit-code="FAILED"/>
		</step>

		<step id="errorPrint1" next="step2">
			<tasklet ref="errorLogTasklet"/>
		</step>

		<step id="step2" parent="secondPass" next="skipCheckingDecision"/>

		<decision id="skipCheckingDecision" decider="skipCheckingDecider">
			<end on="*"/>
			<next on="COMPLETED WITH SKIPS" to="errorPrint2" />
			<fail on="FAILED" exit-code="FAILED"/>
		</decision>
		
		<step id="errorPrint2">
			<tasklet ref="errorLogTasklet"/>
		</step>
	</job>

	<step id="secondPass" parent="t2">
		<tasklet>
			<chunk writer="itemTrackingWriter">
				<skippable-exception-classes merge="true">
					org.springframework.batch.item.validator.ValidationException
				</skippable-exception-classes>
			</chunk>
		</tasklet>
	</step>

	<step id="t2" parent="t3" abstract="true"/>

	<step id="t3" parent="baseStep" abstract="true">
		<tasklet>
			<chunk reader="tradeSqlItemReader" processor="tradeProcessor" writer="dummyWriter" 
	               commit-interval="2" skip-limit="10">
				<skippable-exception-classes>
					java.lang.RuntimeException
				</skippable-exception-classes>
			</chunk>
		</tasklet>
	</step>

	<step id="baseStep" abstract="true">
		<tasklet>
			<listeners>
				<listener class="org.springframework.batch.sample.common.SkipCheckingListener"/>
				<listener ref="promotionListener"/>
			</listeners>
		</tasklet>
	</step>
	
	<beans:bean id="dummyWriter" class="org.springframework.batch.sample.support.DummyItemWriter"/>

	<beans:bean id="promotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener" scope="step">
		<beans:property name="keys" value="stepName"/>
	</beans:bean>
	
	<beans:bean id="fileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<beans:property name="resource" value="classpath:/data/skipJob/input/input#{jobParameters[run.id]}.txt" />
		<beans:property name="lineMapper">
			<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<beans:property name="names" value="ISIN, Quantity, Price, Customer" />
					</beans:bean>
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean class="org.springframework.batch.sample.domain.trade.internal.TradeFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="tradeProcessor" class="org.springframework.batch.sample.domain.trade.internal.TradeProcessor"/>
	
	<beans:bean id="tradeSqlItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="sql" value="SELECT isin, quantity, price, customer from TRADE" />
		<beans:property name="rowMapper">
			<beans:bean class="org.springframework.batch.sample.domain.trade.internal.TradeRowMapper" />
		</beans:property>
	</beans:bean>

	<beans:bean id="customerReportItemWriter" class="org.springframework.batch.sample.domain.trade.internal.FlatFileCustomerCreditDao">
		<beans:property name="itemWriter">
			<beans:bean id="customerFlatFileOutputSource" class="org.springframework.batch.item.file.FlatFileItemWriter">
				<beans:property name="resource" value="target/test-outputs/20070122.testStream.CustomerReportStep.TEMP.txt" />
				<beans:property name="lineAggregator">
					<beans:bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="errorLogTasklet" class="org.springframework.batch.sample.common.ErrorLogTasklet">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>

	<beans:bean id="skipCheckingDecider" class="org.springframework.batch.sample.common.SkipCheckingDecider"/>
	
	<beans:bean id="incrementer" class="org.springframework.batch.sample.common.InfiniteLoopIncrementer"/>
</beans:beans>
