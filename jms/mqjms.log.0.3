January 12, 2013 11:12:06 PM IST[main] com.ibm.msg.client.jms.internal.JmsQueueConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
January 12, 2013 11:12:53 PM IST[main] com.ibm.msg.client.jms.internal.JmsQueueConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
January 12, 2013 11:14:46 PM IST[main] com.ibm.msg.client.jms.internal.JmsQueueConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
January 12, 2013 11:17:13 PM IST[main] com.ibm.msg.client.jms.internal.JmsQueueConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
January 12, 2013 11:24:45 PM IST[main] com.ibm.msg.client.jms.internal.JmsQueueConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
January 12, 2013 11:25:13 PM IST[main] com.ibm.msg.client.jms.internal.JmsQueueConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
January 12, 2013 11:31:57 PM IST[main] com.ibm.msg.client.jms.internal.JmsQueueConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
